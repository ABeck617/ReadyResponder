commit fc2a649999cebeff3891235be8c0c8d6c87e1522
Author: Kevin Fallon <kfallon@seneschal.com>
Date:   Sat Dec 8 13:07:43 2012 -0500

    More work on authorization

diff --git a/app/controllers/certs_controller.rb b/app/controllers/certs_controller.rb
index 9f25dde..6dcd17c 100644
--- a/app/controllers/certs_controller.rb
+++ b/app/controllers/certs_controller.rb
@@ -1,5 +1,6 @@
 class CertsController < ApplicationController
   before_filter :authenticate_user!
+  load_and_authorize_resource
 
   # GET /certs
   # GET /certs.json
diff --git a/app/controllers/certs_controller.rb~ b/app/controllers/certs_controller.rb~
index d01fdac..9f25dde 100644
--- a/app/controllers/certs_controller.rb~
+++ b/app/controllers/certs_controller.rb~
@@ -1,4 +1,6 @@
 class CertsController < ApplicationController
+  before_filter :authenticate_user!
+
   # GET /certs
   # GET /certs.json
   def index
diff --git a/app/models/ability.rb b/app/models/ability.rb
new file mode 100644
index 0000000..e233ded
--- /dev/null
+++ b/app/models/ability.rb
@@ -0,0 +1,19 @@
+class Ability
+  include CanCan::Ability
+  
+  def initialize(current_user)
+    current_user ||= User.new
+    if current_user.role? :Manager
+      can :manage, :all
+    elsif current_user.roles.to_s.include? "Editor"
+      can [:read, :update, :create, :edit], Person
+      can [:read, :update, :create, :edit], Cert
+      #can :update, People
+      can :read, :all
+    elsif current_user.roles.to_s.include? 'Reader'
+      can :read, [Person, Cert]
+    end
+    #can :signin, :people
+ #   can :manage, :all
+  end
+end
\ No newline at end of file
diff --git a/app/models/person.rb b/app/models/person.rb
index 480d621..2f44229 100644
--- a/app/models/person.rb
+++ b/app/models/person.rb
@@ -3,13 +3,7 @@ class Person < ActiveRecord::Base
   
   attr_accessible :firstname, :lastname, :status, :icsid, :city, :state, :zipcode, :start_date, :title, :gender, :date_of_birth,:division1, :division2, :certs_attributes, :title_ids, :title_order
   has_many :certs, :conditions => {:status =>'Active' }
-=begin
-  has_many :certs do
-    def active
-      where{'status == "Active"' }
-    end
-  end
-=end
+
   has_many :courses, :through => :certs
   has_many :skills, :through => :courses
   has_and_belongs_to_many :titles
diff --git a/app/models/person.rb~ b/app/models/person.rb~
index d13691d..480d621 100644
--- a/app/models/person.rb~
+++ b/app/models/person.rb~
@@ -19,7 +19,7 @@ class Person < ActiveRecord::Base
   validates_presence_of :firstname, :lastname, :status
   validates_uniqueness_of :icsid, :allow_nil => true, :allow_blank => true   # this needs to be scoped to active members, or more sophisticated rules
   validates_length_of :state, :is =>2, :allow_nil => true, :allow_blank => true
-  validates_numericality_of  :height, :weight, :allow_nil => true
+  validates_numericality_of  :height, :weight, :allow_nil => true, :allow_blank => true
   validates_presence_of :division2, :unless => "division1.blank?"
   validates_presence_of :division1, :unless => "division2.blank?"
   
diff --git a/app/models/role.rb b/app/models/role.rb
index e6d7cb0..bba6d28 100644
--- a/app/models/role.rb
+++ b/app/models/role.rb
@@ -1,4 +1,9 @@
 class Role < ActiveRecord::Base
   attr_accessible :name
   has_and_belongs_to_many :users
+
+  def to_s
+    self.name.to_s
+  end
+  
 end
diff --git a/app/models/user.rb b/app/models/user.rb
index 14318b3..5067325 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -13,6 +13,6 @@ class User < ActiveRecord::Base
   # attr_accessible :title, :body
   
   def role?(role)
-    roles.include? role.to_s
+    self.roles.include? role.to_s
   end
 end
diff --git a/app/views/certs/index.html.erb b/app/views/certs/index.html.erb
index e0816d2..9ebcf79 100644
--- a/app/views/certs/index.html.erb
+++ b/app/views/certs/index.html.erb
@@ -1,6 +1,6 @@
 <% content_for :sidebar do %>
   <center><h1>Listing Certs</h1></br>
-  <%= link_to 'New Cert', new_cert_path, :class => 'btn' %></center>
+  <%= link_to 'New Cert', new_cert_path, :class => 'btn' unless cannot? :create,